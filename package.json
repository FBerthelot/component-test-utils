{
  "name": "component-test-utils-master",
  "version": "1.0.1-beta.0",
  "private": true,
  "description": "Test component the same way, regardless of the framework (React, Angular, Vue.JS, Vanilla, ...) ",
  "main": "index.js",
  "scripts": {
    "install": "npm run lerna bootstrap && cd website && npm i",
    "lerna": "lerna",
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "jest --ci --runInBand --coverage",
    "coveralls": "cat ./coverage/lcov.info | coveralls",
    "tdd": "jest --watch",
    "changelog": "gitmoji-changelog",
    "doc": "cd website && npm run start",
    "doc:build": "cd website && npm run build"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/FBerthelot/component-test-utils.git"
  },
  "keywords": [
    "test",
    "component",
    "react",
    "angular",
    "vue",
    "vuejs"
  ],
  "author": "FBerthelot",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/FBerthelot/component-test-utils/issues"
  },
  "homepage": "https://github.com/FBerthelot/component-test-utils#readme",
  "devDependencies": {
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-react": "^7.9.4",
    "@types/jest": "^25.2.1",
    "@typescript-eslint/eslint-plugin": "^2.27.0",
    "@typescript-eslint/parser": "^2.27.0",
    "babel-jest": "^25.3.0",
    "coveralls": "^3.0.11",
    "eslint": "^6.8.0",
    "eslint-config-xo-react": "^0.23.0",
    "eslint-config-xo-space": "^0.24.0",
    "eslint-plugin-react": "7.19.0",
    "eslint-plugin-react-hooks": "^4.0.3",
    "gitmoji-changelog": "^2.1.0",
    "jest": "^25.3.0",
    "lerna": "^3.20.2",
    "ts-jest": "^25.3.1",
    "typescript": "^3.8.3"
  },
  "greenkeeper": {
    "commitMessages": {
      "initialBadge": ":pencil: Add Greenkeeper badge",
      "initialDependencies": ":arrow_up: Update dependencies",
      "initialBranches": ":tada: Whitelist greenkeeper branches",
      "dependencyUpdate": ":arrow_up: Update ${dependency} to version ${version}",
      "devDependencyUpdate": ":arrow_up: Update ${dependency} to version ${version}",
      "dependencyPin": ":pushpin: Pin ${dependency} to ${oldVersion}",
      "devDependencyPin": ":pushpin: Pin ${dependency} to ${oldVersion}",
      "lockfileUpdate": ":arrow_up: update lockfile ${lockfilePath}"
    }
  }
}
